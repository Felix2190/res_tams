<?php
	require_once LIB_NUSOAP;
	require_once FOLDER_MODEL_WS . "class.ws.inc.php";
	require_once FOLDER_MODEL_WSDIDWW . "class.ws.response.default.inc.php";

	abstract class WSDIDWW extends WSDamaka
	{


		#-------------------------------------------------------------------------------------------------------------------------#
		#--------------------------------------------------Propiedades Estaticas--------------------------------------------------#
		#-------------------------------------------------------------------------------------------------------------------------#


		#-------------------------------------------------------------------------------------------------------------------------#
		#-------------------------------------------------------Propiedades-------------------------------------------------------#
		#-------------------------------------------------------------------------------------------------------------------------#

		protected $auth_string;

		#-------------------------------------------------------------------------------------------------------------------------#
		#-------------------------------------------------Constructor/Destructor--------------------------------------------------#
		#-------------------------------------------------------------------------------------------------------------------------#

		public function __construct($URL="",$user="",$pass="")
		{

			if($URL!="")
				$this->setURL($URL);
			if($user!="")
				$this->setWSUser($user);
			if($pass!="")
				$this->setWSPassword($pass);
			$this->auth_string=sha1($user.$pass);
		}



		#-------------------------------------------------------------------------------------------------------------------------#
		#---------------------------------------------------------Setters---------------------------------------------------------#
		#-------------------------------------------------------------------------------------------------------------------------#



		#-------------------------------------------------------------------------------------------------------------------------#
		#---------------------------------------------------------Getters---------------------------------------------------------#
		#-------------------------------------------------------------------------------------------------------------------------#



		#-------------------------------------------------------------------------------------------------------------------------#
		#---------------------------------------------------------Acciones--------------------------------------------------------#
		#-------------------------------------------------------------------------------------------------------------------------#

		public function makeDebugFile($folder)
		{
			$file="ws.debug.did." . date("YmdHis") . "." . rand(1000,9999) . ".log.html";
			$pf=fopen($folder . $file,"w");
			fwrite($pf,$this->_salidaHTML);
			fclose($pf);
			return $file;
		}


		private function serializeParams()
		{
			$retorno=array();
			$retorno["auth_string"]=$this->auth_string;

			foreach($this->Param AS $k=>$v)
			{
				$nameMethod="get" . $k;
				$parametro=$this->Param->$nameMethod() . "";
				if(trim($parametro!=""))
					$retorno[$k]=$this->Param->$nameMethod();
			}
			return $retorno;
		}



		protected function procesarResultado()
		{
			if($this->Response->getResponseArray())
			{
				$this->Response->_response=$this->_result;
			}
			else
			{
				foreach($this->_result AS $k=>$v)
				{
					$this->Response->$k=$v;
				}
			}


			if(isset($this->_result['faultcode']))
			{
				$this->setError($this->_result['faultstring'] . "; " . $this->_result['detail']);
			}

		}


		protected function clientCall()
		{
			return $this->_cliente->call(
					$this->_operacion, //accion
					#array("param"=>array("AccountId"=>1000)),//parametros
					$this->serializeParams()//parametros
				);

		}

		protected function preparaResultado($result)
		{
			$this->_result=$result;
		}
	}

